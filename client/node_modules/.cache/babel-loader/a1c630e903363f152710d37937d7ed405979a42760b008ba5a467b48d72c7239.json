{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleUserLogin = async (auth, navigate) => {\n  try {\n    const result = await getRedirectResult(auth);\n    if (result) {\n      const email = result.user.email;\n      // Call backend API to validate the user session or email\n      const response = await fetch('/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        // Proceed to dashboard only after successful backend authentication\n        navigate('/dashboard');\n      } else {\n        // Handle errors or unsuccessful login attempts\n        console.error('Backend authentication failed.');\n      }\n    }\n  } catch (error) {\n    console.error('Error handling redirect or backend validation:', error);\n  }\n};\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithRedirect(auth, provider);\n    } catch (error) {\n      console.error('Error initiating sign in with Google:', error);\n    }\n  };\n  useEffect(() => {\n    handleUserLogin(auth, navigate);\n  }, [auth, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"NoteNest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useNavigate","getAuth","GoogleAuthProvider","signInWithRedirect","getRedirectResult","styles","jsxDEV","_jsxDEV","handleUserLogin","auth","navigate","result","email","user","response","fetch","method","headers","body","JSON","stringify","ok","console","error","Login","_s","signInWithGoogle","provider","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\n\nconst handleUserLogin = async (auth, navigate) => {\n    try {\n        const result = await getRedirectResult(auth);\n        if (result) {\n            const email = result.user.email;\n            // Call backend API to validate the user session or email\n            const response = await fetch('/user/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email }),\n            });\n            if (response.ok) {\n                // Proceed to dashboard only after successful backend authentication\n                navigate('/dashboard');\n            } else {\n                // Handle errors or unsuccessful login attempts\n                console.error('Backend authentication failed.');\n            }\n        }\n    } catch (error) {\n        console.error('Error handling redirect or backend validation:', error);\n    }\n};\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const auth = getAuth();\n\n    const signInWithGoogle = async () => {\n        const provider = new GoogleAuthProvider();\n        try {\n            await signInWithRedirect(auth, provider);\n        } catch (error) {\n            console.error('Error initiating sign in with Google:', error);\n        }\n    };\n\n    useEffect(() => {\n        handleUserLogin(auth, navigate);\n    }, [auth, navigate]);\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>NoteNest</h1>\n            <button className={styles.button} onClick={signInWithGoogle}>\n                Sign in with Google\n            </button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,eAAe;AAClG,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMP,iBAAiB,CAACK,IAAI,CAAC;IAC5C,IAAIE,MAAM,EAAE;MACR,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI,CAACD,KAAK;MAC/B;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAM,CAAC;MAClC,CAAC,CAAC;MACF,IAAIE,QAAQ,CAACO,EAAE,EAAE;QACb;QACAX,QAAQ,CAAC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACH;QACAY,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACJ;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;EAC1E;AACJ,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMf,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGR,OAAO,CAAC,CAAC;EAEtB,MAAMyB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIzB,kBAAkB,CAAC,CAAC;IACzC,IAAI;MACA,MAAMC,kBAAkB,CAACM,IAAI,EAAEkB,QAAQ,CAAC;IAC5C,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IACjE;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZS,eAAe,CAACC,IAAI,EAAEC,QAAQ,CAAC;EACnC,CAAC,EAAE,CAACD,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEpB,oBACIH,OAAA;IAAKqB,SAAS,EAAEvB,MAAM,CAACwB,SAAU;IAAAC,QAAA,gBAC7BvB,OAAA;MAAIqB,SAAS,EAAEvB,MAAM,CAAC0B,KAAM;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C5B,OAAA;MAAQqB,SAAS,EAAEvB,MAAM,CAAC+B,MAAO;MAACC,OAAO,EAAEX,gBAAiB;MAAAI,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACV,EAAA,CAzBID,KAAK;EAAA,QACUxB,WAAW;AAAA;AAAAsC,EAAA,GAD1Bd,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}