{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\nimport { AuthContext } from '../AuthContext'; // Assuming you have an AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const {\n    setAuthenticated\n  } = useContext(AuthContext);\n  const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithRedirect(auth, provider);\n    } catch (error) {\n      console.error('Error initiating sign in with Google:', error);\n    }\n  };\n  useEffect(() => {\n    const handleRedirectResult = async () => {\n      try {\n        const result = await getRedirectResult(auth);\n        if (result) {\n          const email = result.user.email;\n          // Send this data to your backend\n          const response = await fetch('/user/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email\n            })\n          });\n          const data = await response.json();\n          setAuthenticated(true); // Update the authenticated state\n          navigate('/dashboard', {\n            replace: true\n          });\n        }\n      } catch (error) {\n        console.error('Error handling redirect:', error);\n      }\n    };\n    handleRedirectResult();\n  }, [auth, navigate, setAuthenticated]); // Dependencies for useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"NoteNest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"Nt5csQi39yJeB9jV/7++sZ+ZD6M=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","getAuth","GoogleAuthProvider","signInWithRedirect","getRedirectResult","styles","AuthContext","jsxDEV","_jsxDEV","Login","_s","navigate","auth","setAuthenticated","signInWithGoogle","provider","error","console","handleRedirectResult","result","email","user","response","fetch","method","headers","body","JSON","stringify","data","json","replace","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\nimport { AuthContext } from '../AuthContext';  // Assuming you have an AuthContext\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const auth = getAuth();\n    const { setAuthenticated } = useContext(AuthContext);\n\n    const signInWithGoogle = async () => {\n        const provider = new GoogleAuthProvider();\n        try {\n            await signInWithRedirect(auth, provider);\n        } catch (error) {\n            console.error('Error initiating sign in with Google:', error);\n        }\n    };\n\n    useEffect(() => {\n        const handleRedirectResult = async () => {\n            try {\n                const result = await getRedirectResult(auth);\n                if (result) {\n                    const email = result.user.email;\n                    // Send this data to your backend\n                    const response = await fetch('/user/login', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            email\n                        }),\n                    });\n                    const data = await response.json();\n                    setAuthenticated(true);  // Update the authenticated state\n                    navigate('/dashboard', { replace: true });\n                }\n            } catch (error) {\n                console.error('Error handling redirect:', error);\n            }\n        };\n\n        handleRedirectResult();\n    }, [auth, navigate, setAuthenticated]); // Dependencies for useEffect\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>NoteNest</h1>\n            <button className={styles.button} onClick={signInWithGoogle}>\n                Sign in with Google\n            </button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,eAAe;AAClG,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,IAAI,GAAGX,OAAO,CAAC,CAAC;EACtB,MAAM;IAAEY;EAAiB,CAAC,GAAGd,UAAU,CAACO,WAAW,CAAC;EAEpD,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIb,kBAAkB,CAAC,CAAC;IACzC,IAAI;MACA,MAAMC,kBAAkB,CAACS,IAAI,EAAEG,QAAQ,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IACjE;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZ,MAAMqB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMf,iBAAiB,CAACQ,IAAI,CAAC;QAC5C,IAAIO,MAAM,EAAE;UACR,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI,CAACD,KAAK;UAC/B;UACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;YACxCC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACjBR;YACJ,CAAC;UACL,CAAC,CAAC;UACF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAClCjB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAE;UACzBF,QAAQ,CAAC,YAAY,EAAE;YAAEoB,OAAO,EAAE;UAAK,CAAC,CAAC;QAC7C;MACJ,CAAC,CAAC,OAAOf,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDE,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACN,IAAI,EAAED,QAAQ,EAAEE,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAExC,oBACIL,OAAA;IAAKwB,SAAS,EAAE3B,MAAM,CAAC4B,SAAU;IAAAC,QAAA,gBAC7B1B,OAAA;MAAIwB,SAAS,EAAE3B,MAAM,CAAC8B,KAAM;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C/B,OAAA;MAAQwB,SAAS,EAAE3B,MAAM,CAACmC,MAAO;MAACC,OAAO,EAAE3B,gBAAiB;MAAAoB,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAlDID,KAAK;EAAA,QACUT,WAAW;AAAA;AAAA0C,EAAA,GAD1BjC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}