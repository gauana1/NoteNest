{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/compiledNotes.js\",\n  _s = $RefreshSig$();\n// src/pages/CompiledNotes.js\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompiledNotes = () => {\n  _s();\n  const {\n    classId\n  } = useParams(); // Destructure classId from useParams\n\n  React.useEffect(() => {\n    // Logic to fetch compiled notes based on classId\n    console.log(`Fetching compiled notes for group ID: ${classId}`);\n    // You can put fetch API call or other side effects here\n  }, [classId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Compiled Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Displaying compiled notes for groupId ID: \", groupId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(CompiledNotes, \"QBBzihY6aZc9uatf/IltqStJlr0=\", false, function () {\n  return [useParams];\n});\n_c = CompiledNotes;\nexport default CompiledNotes;\nvar _c;\n$RefreshReg$(_c, \"CompiledNotes\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","CompiledNotes","_s","classId","useEffect","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","groupId","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/compiledNotes.js"],"sourcesContent":["// src/pages/CompiledNotes.js\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CompiledNotes = () => {\n    const { classId } = useParams();  // Destructure classId from useParams\n\n    React.useEffect(() => {\n        // Logic to fetch compiled notes based on classId\n        console.log(`Fetching compiled notes for group ID: ${classId}`);\n        // You can put fetch API call or other side effects here\n    }, [classId]);\n\n    return (\n        <div>\n            <h1>Compiled Notes</h1>\n            <p>Displaying compiled notes for groupId ID: {groupId}</p>\n        </div>\n    );\n}\n\nexport default CompiledNotes;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;;EAElCD,KAAK,CAACO,SAAS,CAAC,MAAM;IAClB;IACAC,OAAO,CAACC,GAAG,CAAE,yCAAwCH,OAAQ,EAAC,CAAC;IAC/D;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACIH,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBX,OAAA;MAAAO,QAAA,GAAG,4CAA0C,EAACK,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAAAT,EAAA,CAfKD,aAAa;EAAA,QACKH,SAAS;AAAA;AAAAe,EAAA,GAD3BZ,aAAa;AAiBnB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}