{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    console.log(\"fetching\");\n    try {\n      // This initiates the sign-in with redirect.\n      await signInWithRedirect(auth, provider);\n      // Assuming the redirect back will be handled elsewhere after Google sign-in,\n      // e.g., in an effect or on a different route where the redirect result is processed.\n\n      // Below code will NOT work with signInWithRedirect as intended here because\n      // signInWithRedirect does not resolve with the user directly after calling it.\n      // Handling should occur after redirect in componentDidMount or useEffect depending on your setup.\n      const response = await fetch('/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // token, email, name would be fetched differently as signInWithRedirect doesn't immediately provide result\n        })\n      });\n      const data = await response.json();\n      console.log('Login successful:', data);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"NoteNest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","getAuth","GoogleAuthProvider","signInWithRedirect","styles","jsxDEV","_jsxDEV","Login","_s","navigate","auth","signInWithGoogle","provider","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","error","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const auth = getAuth();\n\n    const signInWithGoogle = async () => {\n        const provider = new GoogleAuthProvider();\n        console.log(\"fetching\");\n        try {\n            // This initiates the sign-in with redirect.\n            await signInWithRedirect(auth, provider);\n            // Assuming the redirect back will be handled elsewhere after Google sign-in,\n            // e.g., in an effect or on a different route where the redirect result is processed.\n\n            // Below code will NOT work with signInWithRedirect as intended here because\n            // signInWithRedirect does not resolve with the user directly after calling it.\n            // Handling should occur after redirect in componentDidMount or useEffect depending on your setup.\n            const response = await fetch('/user/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    // token, email, name would be fetched differently as signInWithRedirect doesn't immediately provide result\n                }),\n            });\n            const data = await response.json();\n            console.log('Login successful:', data);\n            navigate('/dashboard');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>NoteNest</h1>\n            <button className={styles.button} onClick={signInWithGoogle}>\n                Sign in with Google\n            </button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,eAAe;AAC/E,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,IAAI,GAAGT,OAAO,CAAC,CAAC;EAEtB,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIV,kBAAkB,CAAC,CAAC;IACzCW,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAI;MACA;MACA,MAAMX,kBAAkB,CAACO,IAAI,EAAEE,QAAQ,CAAC;MACxC;MACA;;MAEA;MACA;MACA;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB;QAAA,CACH;MACL,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEQ,IAAI,CAAC;MACtCb,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKmB,SAAS,EAAErB,MAAM,CAACsB,SAAU;IAAAC,QAAA,gBAC7BrB,OAAA;MAAImB,SAAS,EAAErB,MAAM,CAACwB,KAAM;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C1B,OAAA;MAAQmB,SAAS,EAAErB,MAAM,CAAC6B,MAAO;MAACC,OAAO,EAAEvB,gBAAiB;MAAAgB,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACxB,EAAA,CAzCID,KAAK;EAAA,QACUP,WAAW;AAAA;AAAAmC,EAAA,GAD1B5B,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}