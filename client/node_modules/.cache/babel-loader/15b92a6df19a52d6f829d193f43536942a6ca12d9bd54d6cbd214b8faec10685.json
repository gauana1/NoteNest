{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/components/addClass.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport { useAuth } from '../context/authContext'; // Import useAuth from your AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddClassDialog = ({\n  open,\n  handleClose\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useAuth(); // Correctly access currentUser from the useAuth hook\n  const [className, setClassName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emails, setEmails] = useState([]);\n  const handleAddEmail = () => {\n    if (email && !emails.includes(email)) {\n      // Prevent adding duplicates\n      setEmails([...emails, email]);\n      setEmail(\"\"); // Clear input after adding\n    }\n  };\n  const handleDeleteEmail = emailToDelete => () => {\n    setEmails(emails.filter(email => email !== emailToDelete));\n  };\n  const handleAddClass = async () => {\n    // Include the current user's email\n    const allEmails = [...emails];\n    if (currentUser && currentUser.email && !emails.includes(currentUser.email)) {\n      allEmails.push(currentUser.email);\n    }\n    const classData = {\n      classname: className,\n      emails: allEmails\n    };\n    console.log(classData);\n    try {\n      const response = await fetch('/classes/create', {\n        // Adjust URL as necessary\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(classData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Class created successfully:', result);\n        handleClose(); // Close dialog after successful API call\n      } else {\n        const error = await response.json();\n        console.error('Failed to create class:', error.message);\n        alert('Failed to create class: ' + error.message);\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n      alert('Error sending data: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    sx: {\n      '& .MuiDialog-paper': {\n        minWidth: '40vw',\n        maxWidth: '80vw',\n        width: 'auto'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add New Class/Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Class Name\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: className,\n          onChange: e => setClassName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add User by Email\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleAddEmail()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: emails.map((email, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: email,\n            onDelete: handleDeleteEmail(email),\n            variant: \"outlined\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddClass,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AddClassDialog, \"nuXl+9Hw6py4aBbxQamBWTbxaD8=\", false, function () {\n  return [useAuth];\n});\n_c = AddClassDialog;\nexport default AddClassDialog;\nvar _c;\n$RefreshReg$(_c, \"AddClassDialog\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Chip","Stack","useAuth","jsxDEV","_jsxDEV","AddClassDialog","open","handleClose","_s","currentUser","className","setClassName","email","setEmail","emails","setEmails","handleAddEmail","includes","handleDeleteEmail","emailToDelete","filter","handleAddClass","allEmails","push","classData","classname","console","log","response","fetch","method","headers","body","JSON","stringify","ok","result","json","error","message","alert","onClose","sx","minWidth","maxWidth","width","children","fileName","_jsxFileName","lineNumber","columnNumber","spacing","label","variant","fullWidth","value","onChange","e","target","onKeyPress","key","direction","map","index","onDelete","onClick","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/components/addClass.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport { useAuth } from '../context/authContext';  // Import useAuth from your AuthContext\n\nconst AddClassDialog = ({ open, handleClose }) => {\n  const { currentUser } = useAuth();  // Correctly access currentUser from the useAuth hook\n  const [className, setClassName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emails, setEmails] = useState([]);\n\n  const handleAddEmail = () => {\n    if (email && !emails.includes(email)) {  // Prevent adding duplicates\n      setEmails([...emails, email]);\n      setEmail(\"\");  // Clear input after adding\n    }\n  };\n\n  const handleDeleteEmail = (emailToDelete) => () => {\n    setEmails(emails.filter((email) => email !== emailToDelete));\n  };\n\n  const handleAddClass = async () => {\n    // Include the current user's email\n    const allEmails = [...emails];\n    if (currentUser && currentUser.email && !emails.includes(currentUser.email)) {\n      allEmails.push(currentUser.email);\n    }\n\n    const classData = {\n      classname: className,\n      emails: allEmails\n    };\n    console.log(classData);\n    try {\n      const response = await fetch('/classes/create', {  // Adjust URL as necessary\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(classData)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Class created successfully:', result);\n        handleClose();  // Close dialog after successful API call\n      } else {\n        const error = await response.json();\n        console.error('Failed to create class:', error.message);\n        alert('Failed to create class: ' + error.message);\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n      alert('Error sending data: ' + error.message);\n    }\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={handleClose}\n      sx={{ '& .MuiDialog-paper': { minWidth: '40vw', maxWidth: '80vw', width: 'auto' } }}\n    >\n      <DialogTitle>Add New Class/Create Group</DialogTitle>\n      <DialogContent>\n        <Stack spacing={2}>\n          <TextField\n            label=\"Class Name\"\n            variant=\"outlined\"\n            fullWidth\n            value={className}\n            onChange={(e) => setClassName(e.target.value)}\n          />\n          <TextField\n            label=\"Add User by Email\"\n            variant=\"outlined\"\n            fullWidth\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleAddEmail()}\n          />\n          <Stack direction=\"row\" spacing={1}>\n            {emails.map((email, index) => (\n              <Chip\n                key={index}\n                label={email}\n                onDelete={handleDeleteEmail(email)}\n                variant=\"outlined\"\n              />\n            ))}\n          </Stack>\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleAddClass}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddClassDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}