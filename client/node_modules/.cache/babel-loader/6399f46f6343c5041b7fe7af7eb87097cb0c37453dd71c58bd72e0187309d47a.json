{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithRedirect(auth, provider).then(result => {\n      // This gives you a Google Access Token.\n      const token = result.credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      console.log(\"fetching\");\n      // You can now send the token and any other user info to your backend\n      fetch('/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token,\n          email: user.email,\n          name: user.displayName\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Login successful:', data);\n        navigate('/dashboard');\n      }).catch(error => {\n        console.error('Error posting login info:', error);\n      });\n    }).catch(error => {\n      console.error('Error signing in with Google:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"NoteNest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","getAuth","GoogleAuthProvider","signInWithRedirect","styles","jsxDEV","_jsxDEV","Login","_s","navigate","auth","signInWithGoogle","provider","then","result","token","credential","accessToken","user","console","log","fetch","method","headers","body","JSON","stringify","email","name","displayName","response","json","data","catch","error","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/login.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithRedirect } from 'firebase/auth';\nimport styles from '../styles/login.module.css';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const auth = getAuth();\n\n    const signInWithGoogle = () => {\n        const provider = new GoogleAuthProvider();\n        signInWithRedirect(auth, provider).then((result) => {\n            // This gives you a Google Access Token.\n            const token = result.credential.accessToken;\n            // The signed-in user info.\n            const user = result.user;\n            console.log(\"fetching\");\n            // You can now send the token and any other user info to your backend\n            fetch('/user/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    token: token,\n                    email: user.email,\n                    name: user.displayName,\n                }),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Login successful:', data);\n                navigate('/dashboard');\n            })\n            .catch(error => {\n                console.error('Error posting login info:', error);\n            });\n\n        }).catch((error) => {\n            console.error('Error signing in with Google:', error);\n        });\n    };\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>NoteNest</h1>\n            <button className={styles.button} onClick={signInWithGoogle}>\n                Sign in with Google\n            </button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,eAAe;AAC/E,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,IAAI,GAAGT,OAAO,CAAC,CAAC;EAEtB,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG,IAAIV,kBAAkB,CAAC,CAAC;IACzCC,kBAAkB,CAACO,IAAI,EAAEE,QAAQ,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MAChD;MACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,UAAU,CAACC,WAAW;MAC3C;MACA,MAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAI;MACxBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB;MACAC,KAAK,CAAC,aAAa,EAAE;QACjBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBX,KAAK,EAAEA,KAAK;UACZY,KAAK,EAAET,IAAI,CAACS,KAAK;UACjBC,IAAI,EAAEV,IAAI,CAACW;QACf,CAAC;MACL,CAAC,CAAC,CACDhB,IAAI,CAACiB,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjClB,IAAI,CAACmB,IAAI,IAAI;QACVb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEY,IAAI,CAAC;QACtCvB,QAAQ,CAAC,YAAY,CAAC;MAC1B,CAAC,CAAC,CACDwB,KAAK,CAACC,KAAK,IAAI;QACZf,OAAO,CAACe,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IAEN,CAAC,CAAC,CAACD,KAAK,CAAEC,KAAK,IAAK;MAChBf,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAE/B,MAAM,CAACgC,SAAU;IAAAC,QAAA,gBAC7B/B,OAAA;MAAI6B,SAAS,EAAE/B,MAAM,CAACkC,KAAM;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CpC,OAAA;MAAQ6B,SAAS,EAAE/B,MAAM,CAACuC,MAAO;MAACC,OAAO,EAAEjC,gBAAiB;MAAA0B,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAClC,EAAA,CA9CID,KAAK;EAAA,QACUP,WAAW;AAAA;AAAA6C,EAAA,GAD1BtC,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}