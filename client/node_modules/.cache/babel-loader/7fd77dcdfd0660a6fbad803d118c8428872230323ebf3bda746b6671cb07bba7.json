{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/myNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { useAuth } from '../context/authContext';\nimport { useParams } from 'react-router-dom'; // Import useParams\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNotes = () => {\n  _s();\n  const [note, setNote] = useState('');\n  const [loading, setLoading] = useState(true); // To handle loading state\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    classId\n  } = useParams(); // Use useParams to access classId\n\n  useEffect(() => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        fetch(`http://localhost:4000/notes/getnotes/${classId}/`, {\n          method: 'GET',\n          // GET request to fetch data\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Failed to fetch notes');\n        }).then(data => {\n          setNote(data.notes); // Assuming the notes are returned under 'notes' key\n          setLoading(false);\n        }).catch(error => {\n          console.error('Fetch error:', error);\n          setLoading(false);\n        });\n      });\n    }\n  }, [currentUser, classId]); // Dependency array to refetch when currentUser or classId changes\n\n  const handleSave = () => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        console.log('JWT Token:', token);\n        console.log('Note saved:', note);\n        fetch(`http://localhost:4000/notes/savenotes/${classId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            notes: note\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Network response was not ok.');\n        }).then(data => {\n          console.log('Success:', data);\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }).catch(error => {\n        console.error('Error getting token:', error);\n      });\n    } else {\n      console.log('No user logged in');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this); // Display loading state\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      sx: {\n        fontFamily: 'Cursive',\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      multiline: true,\n      rows: 10,\n      variant: \"outlined\",\n      placeholder: \"Write your notes here...\",\n      value: note,\n      onChange: e => setNote(e.target.value),\n      fullWidth: true,\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this),\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSave,\n      sx: {\n        width: '200px'\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNotes, \"xnb7m658X9DUIz4r/ln8lLN7jnk=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = MyNotes;\nexport default MyNotes;\nvar _c;\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","Typography","SaveIcon","useAuth","useParams","jsxDEV","_jsxDEV","MyNotes","_s","note","setNote","loading","setLoading","currentUser","classId","getIdToken","then","token","fetch","method","headers","response","ok","json","Error","data","notes","catch","error","console","handleSave","log","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","flexDirection","alignItems","p","variant","fontFamily","mb","textAlign","multiline","rows","placeholder","value","onChange","e","target","fullWidth","startIcon","color","onClick","width","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/myNotes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { useAuth } from '../context/authContext';\nimport { useParams } from 'react-router-dom'; // Import useParams\n\nconst MyNotes = () => {\n  const [note, setNote] = useState('');\n  const [loading, setLoading] = useState(true); // To handle loading state\n  const { currentUser } = useAuth();\n  const { classId } = useParams(); // Use useParams to access classId\n\n  useEffect(() => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        fetch(`http://localhost:4000/notes/getnotes/${classId}/`, {\n          method: 'GET', // GET request to fetch data\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Failed to fetch notes');\n        })\n        .then(data => {\n          setNote(data.notes); // Assuming the notes are returned under 'notes' key\n          setLoading(false);\n        })\n        .catch(error => {\n          console.error('Fetch error:', error);\n          setLoading(false);\n        });\n      });\n    }\n  }, [currentUser, classId]); // Dependency array to refetch when currentUser or classId changes\n\n  const handleSave = () => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        console.log('JWT Token:', token);\n        console.log('Note saved:', note);\n\n        fetch(`http://localhost:4000/notes/savenotes/${classId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({ notes: note })\n        })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Network response was not ok.');\n        })\n        .then(data => {\n          console.log('Success:', data);\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n      }).catch(error => {\n        console.error('Error getting token:', error);\n      });\n    } else {\n      console.log('No user logged in');\n    }\n  };\n\n  if (loading) {\n    return <div>Loading notes...</div>; // Display loading state\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n      <Typography variant=\"h3\" sx={{ fontFamily: 'Cursive', mb: 4, textAlign: 'center' }}>\n        My Notes\n      </Typography>\n      <TextField\n        multiline\n        rows={10}\n        variant=\"outlined\"\n        placeholder=\"Write your notes here...\"\n        value={note}\n        onChange={(e) => setNote(e.target.value)}\n        fullWidth\n        sx={{ mb: 2 }}\n      />\n      <Button\n        startIcon={<SaveIcon />}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSave}\n        sx={{ width: '200px' }}\n      >\n        Save\n      </Button>\n    </Box>\n  );\n}\n\nexport default MyNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}