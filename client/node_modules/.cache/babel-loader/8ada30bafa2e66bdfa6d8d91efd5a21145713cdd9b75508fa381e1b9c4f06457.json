{"ast":null,"code":"var _jsxFileName = \"/Users/gauana/CS Projects/NoteNest/client/src/pages/myNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { useAuth } from '../context/authContext'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNotes = () => {\n  _s();\n  const [note, setNote] = useState('');\n  const {\n    currentUser\n  } = useAuth(); // Get current user from context\n  const classId = \"123\"; // This should be dynamically set based on the user selection or other logic\n\n  const handleSave = () => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        console.log('JWT Token:', token);\n        console.log('Note saved:', note);\n\n        // Updated to send to the new API endpoint\n        fetch('http://localhost:4000/notes/' + classId, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            note\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Network response was not ok.');\n        }).then(data => {\n          console.log('Success:', data);\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }).catch(error => {\n        console.error('Error getting token:', error);\n      });\n    } else {\n      console.log('No user logged in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      sx: {\n        fontFamily: 'Cursive',\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      multiline: true,\n      rows: 10,\n      variant: \"outlined\",\n      placeholder: \"Write your notes here...\",\n      value: note,\n      onChange: e => setNote(e.target.value),\n      fullWidth: true,\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this),\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSave,\n      sx: {\n        width: '200px'\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNotes, \"huYEBj2FLnKezQyjw8plDKXeOLU=\", false, function () {\n  return [useAuth];\n});\n_c = MyNotes;\nexport default MyNotes;\nvar _c;\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","SaveIcon","useAuth","jsxDEV","_jsxDEV","MyNotes","_s","note","setNote","currentUser","classId","handleSave","getIdToken","then","token","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","Error","data","catch","error","sx","display","flexDirection","alignItems","p","children","variant","fontFamily","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","placeholder","value","onChange","e","target","fullWidth","startIcon","color","onClick","width","_c","$RefreshReg$"],"sources":["/Users/gauana/CS Projects/NoteNest/client/src/pages/myNotes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { useAuth } from '../context/authContext'; // Adjust the path as necessary\n\nconst MyNotes = () => {\n  const [note, setNote] = useState('');\n  const { currentUser } = useAuth(); // Get current user from context\n  const classId = \"123\"; // This should be dynamically set based on the user selection or other logic\n\n  const handleSave = () => {\n    if (currentUser) {\n      currentUser.getIdToken().then(token => {\n        console.log('JWT Token:', token);\n        console.log('Note saved:', note);\n\n        // Updated to send to the new API endpoint\n        fetch('http://localhost:4000/notes/' + classId, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({ note })\n        })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Network response was not ok.');\n        })\n        .then(data => {\n          console.log('Success:', data);\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n\n      }).catch(error => {\n        console.error('Error getting token:', error);\n      });\n    } else {\n      console.log('No user logged in');\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n      <Typography variant=\"h3\" sx={{ fontFamily: 'Cursive', mb: 4, textAlign: 'center' }}>\n        My Notes\n      </Typography>\n      <TextField\n        multiline\n        rows={10}\n        variant=\"outlined\"\n        placeholder=\"Write your notes here...\"\n        value={note}\n        onChange={(e) => setNote(e.target.value)}\n        fullWidth\n        sx={{ mb: 2 }}\n      />\n      <Button\n        startIcon={<SaveIcon />}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSave}\n        sx={{ width: '200px' }}\n      >\n        Save\n      </Button>\n    </Box>\n  );\n}\n\nexport default MyNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}